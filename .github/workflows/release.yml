name: Release (build & deploy only)

on:
  workflow_dispatch:
  push:
    branches: [ master, main ]
    tags: ['v*']

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      IMAGE_TAG: ${{ github.ref_name }}   # e.g. 'main' or 'v1.0.0'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Optional: if your frontend build needs to know backend URL
      - name: Ensure VITE_API_BASE (optional)
        if: ${{ vars.BACKEND_API_BASE != '' }}
        working-directory: MJ_FB_Frontend
        run: |
          echo "VITE_API_BASE=${{ vars.BACKEND_API_BASE }}" > .env
          echo "Using VITE_API_BASE=${{ vars.BACKEND_API_BASE }}"

      # ---- Build images on GitHub runner ----
      - name: Build backend image
        run: docker build -t mjfb-backend:${{ env.IMAGE_TAG }} MJ_FB_Backend

      - name: Build frontend image
        run: docker build -t mjfb-frontend:${{ env.IMAGE_TAG }} MJ_FB_Frontend

      # ---- Tag & push to ACR (also push :latest) ----
      - name: Tag & Push images
        env:
          REGISTRY: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        run: |
          docker tag mjfb-backend:${{ env.IMAGE_TAG }}  $REGISTRY/mjfb-backend:${{ env.IMAGE_TAG }}
          docker tag mjfb-backend:${{ env.IMAGE_TAG }}  $REGISTRY/mjfb-backend:latest
          docker tag mjfb-frontend:${{ env.IMAGE_TAG }} $REGISTRY/mjfb-frontend:${{ env.IMAGE_TAG }}
          docker tag mjfb-frontend:${{ env.IMAGE_TAG }} $REGISTRY/mjfb-frontend:latest

          docker push $REGISTRY/mjfb-backend:${{ env.IMAGE_TAG }}
          docker push $REGISTRY/mjfb-backend:latest
          docker push $REGISTRY/mjfb-frontend:${{ env.IMAGE_TAG }}
          docker push $REGISTRY/mjfb-frontend:latest

      # ---- Deploy to Azure Container Apps (update existing apps) ----
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Container Apps
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az extension add --name containerapp --upgrade
            az containerapp update -g ${{ vars.AZURE_RESOURCE_GROUP }} -n ${{ vars.BACKEND_APP_NAME }}  --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/mjfb-backend:latest
            az containerapp update -g ${{ vars.AZURE_RESOURCE_GROUP }} -n ${{ vars.FRONTEND_APP_NAME }} --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/mjfb-frontend:latest
